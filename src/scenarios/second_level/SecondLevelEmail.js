import React from "react";
import { DndProvider } from "react-dnd";
import { HTML5Backend } from "react-dnd-html5-backend";
import GameWriter from "../../components/GameWriter";
import Regular from "../../img/right.jpeg";
import Phishing from "../../img/wrong.jpeg";
import Email_1 from "../../img/email_1.jpeg";
import Email_2 from "../../img/email_2.jpeg";
import Email_3 from "../../img/email_3.jpeg";
import Email_4 from "../../img/email_4.jpeg";
import Email_5 from "../../img/email_5.jpeg";
import Email_6 from "../../img/email_6.jpeg";
import Email_7 from "../../img/email_7.jpeg";
import Email_8 from "../../img/email_8.jpeg";
import Email_9 from "../../img/email_9.jpeg";
import Email_10 from "../../img/email_10.jpeg";
import Container from "../../dnd/Container";
import { ItemTypes } from "../../dnd/ItemTypes";
import GameAlert from "../../components/GameAlert";

export const emails = [
  {
    name: "email1",
    type: ItemTypes.EMAIL,
    img: Email_1,
    width: 800,
    heigth: 400,
    positive: true,
    comment_wrong:
      "The answer in this case is wrong because a simple communication via email is not enough to move such large sums of money. So, if you receive such an email, it's always best to make sure of the veracity of the source.",
    comment_right:
      "The answer in this case is correct because to move such large sums of money a simple email is usually not enough, but the communication takes place in a different way (by telephone, in person...).",
  },
  {
    name: "email2",
    type: ItemTypes.EMAIL,
    img: Email_2,
    width: 800,
    heigth: 400,
    positive: true,
    comment_wrong:
      "The answer in this case is wrong because for important communications the bank usually does not ask to re-enter the username and password but rather calls the customer by telephone to report the problems that exist. This is because the bank manages sensitive data since we are talking about large sums of money.",
    comment_right:
      "The answer in this case is correct because in the event of a problem the bank does not communicate via email, but usually calls its customer since it manages sensitive data and simple email is not a secure communication.",
  },
  {
    name: "email3",
    type: ItemTypes.EMAIL,
    img: Email_3,
    width: 800,
    heigth: 400,
    positive: true,
    comment_wrong:
      "The answer, in this case, is wrong because it is difficult to enter sensitive data via a form linked by email. Furthermore, whoever wrote the email tries to put pressure on the user, and this is not a good sign, given that they are trying to play with human emotions to try to get something.",
    comment_right:
      "The answer, in this case, is correct because it is not safe to send a form where sensitive data must be entered via email. Furthermore, whoever sent the email tries to put pressure on the user, almost by blackmailing him. This is another sign that the writer of the email is trying to obtain information through blackmail.",
  },
  {
    name: "email4",
    type: ItemTypes.EMAIL,
    img: Email_4,
    width: 800,
    heigth: 400,
    positive: false,
    comment_wrong:
      "The answer in this case is wrong, because nothing personal or sensitive is asked but only credentials are provided to access a training course.",
    comment_right:
      "The answer in this case is correct because there is nothing dangerous. We simply talk about a training course that wants to be delivered to company employees and they are given access credentials.",
  },
  {
    name: "email5",
    type: ItemTypes.EMAIL,
    img: Email_5,
    width: 800,
    heigth: 400,
    positive: true,
    comment_wrong:
      "The answer, in this case, is wrong, both because, as previously mentioned, the bank communicates important notices in different ways and also because the email contains grammatical errors which are not frequent in these types of notices.",
    comment_right:
      "The answer in this case is correct, in fact the email contains some grammatical errors that are not usually frequent in such important communications. Furthermore, as previously mentioned, the bank uses other channels for such important communications, such as the telephone one.",
  },
  {
    name: "email6",
    type: ItemTypes.EMAIL,
    img: Email_6,
    width: 800,
    heigth: 400,
    positive: true,
    comment_wrong:
      "The answer in this case is wrong, because such important communications from the bank do not take place via e-mail",
    comment_right:
      "The answer in this case is correct, because communications of this type do not take place via email.",
  },
  {
    name: "email7",
    type: ItemTypes.EMAIL,
    img: Email_7,
    width: 800,
    heigth: 400,
    positive: false,
    comment_wrong:
      "The answer in this case is wrong, because it is a simple article that your colleague is sending you.",
    comment_right:
      "The answer in this case is correct because it is a simple news article that your colleague",
  },
  {
    name: "email8",
    type: ItemTypes.EMAIL,
    img: Email_8,
    width: 800,
    heigth: 400,
    positive: false,
    comment_wrong:
      "The answer in this case is wrong, because it is a simple congratulatory email that the director is sending to the employees of his office.",
    comment_right:
      "The answer in this case is correct because it is a simple congratulatory email from the director of your office.",
  },
  {
    name: "email9",
    type: ItemTypes.EMAIL,
    img: Email_9,
    width: 800,
    heigth: 400,
    positive: false,
    comment_wrong:
      "The answer in this case is wrong, because the source is trusted as a colleague of yours. Furthermore, you don't have to enter data, but there is only an attachment with the plan",
    comment_right:
      "The answer in this case is correct because the source of the email is trusted being your colleague. Furthermore, the sending and entering of any type of data is not required, but there is only an attachment with the work plan for the week.",
  },
  {
    name: "email10",
    type: ItemTypes.EMAIL,
    img: Email_10,
    width: 800,
    heigth: 400,
    positive: true,
    comment_wrong:
      "The answer in this case is wrong because there is pressure from the sender, and there is also a request for money, which must not be made so explicitly via email.",
    comment_right:
      "The answer, in this case, is correct because the sending of money is requested via a simple email. Furthermore, there must be no pressure from the sender on the recipient as in this case.",
  },
];

export const alertRight = {
  head: "Right Answer!",
  text: "Okay, did it well!",
};

export const alertWrong = {
  head: "Wrong Answer!",
  text: "Bad decision!",
};

export const dustbins = [
  {
    accepts: ItemTypes.EMAIL,
    lastDroppedItem: null,
    img: Regular,
    width: 80,
    heigth: 60,
    idOption: "Regular",
  },
  {
    accepts: ItemTypes.EMAIL,
    lastDroppedItem: null,
    img: Phishing,
    width: 80,
    heigth: 60,
    idOption: "Phishing",
  },
];

class SecondLevelEmail extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      actualID: 0,
      idOption: null,
      boxes: [emails[0]],
      dustbins: dustbins,
    };
  }

  handleSwitchToThirdLevel = () => {
    this.props.handleScenario("third");
  };

  handleIdOption = (idOption) => {
    this.setState({ idOption: idOption });
    if(idOption === "Regular") {
      if(emails[this.state.actualID].positive === false) {
        this.props.updateScore(2);
        this.props.right();
      } else {this.props.wrong();}
    } else {
      if(emails[this.state.actualID].positive) {
        this.props.updateScore(2);
        this.props.right();
      } else {
        this.props.wrong();
      }
    }
    /* if(idOption === "Regular" && emails[this.state.actualID].positive === false) {
      this.props.updateScore(2);
      this.props.right();
    } else { this.props.wrong(); }
    if(idOption === "Phishing" && emails[this.state.actualID].positive) {
      this.props.updateScore(2);
      this.props.right();
    } else { this.props.wrong(); } */
  };

  handleSwitchToNextEmail = () => {
    let actualID = ++this.state.actualID;
    let boxes = [emails[this.state.actualID]];
    this.setState({ actualID: actualID, boxes: boxes, idOption: null });
  };

  render() {
    return (
      <div className="SecondLevelEmail">
        <DndProvider backend={HTML5Backend}>
          <div className="mb-3">
            <GameWriter
              text={
                "Drag the email and drop it to ' âœ“' if you think it is a secure and safe email, or to 'X' if you think it is a phishing attempt."
              }
            />
          </div>
          <Container
            boxesParam={this.state.boxes}
            dustbinsParam={this.state.dustbins}
            callBack={this.handleIdOption}
          />
        </DndProvider>
        {this.state.idOption === "Regular" &&
          emails[this.state.actualID].positive === false &&
          this.state.actualID !== 9 && (
            <>
              <GameAlert
                show={true}
                alert={alertRight}
                comment={emails[this.state.actualID].comment_right}
                callBack={this.handleSwitchToNextEmail}
              />
            </>
          )}
        {this.state.idOption === "Regular" &&
          emails[this.state.actualID].positive &&
          this.state.actualID !== 9 && (
            <>
              <GameAlert
                show={true}
                alert={alertWrong}
                comment={emails[this.state.actualID].comment_wrong}
                callBack={this.handleSwitchToNextEmail}
              />
            </>
          )}
        {this.state.idOption === "Phishing" &&
          emails[this.state.actualID].positive &&
          this.state.actualID !== 9 && (
            <>
              <GameAlert
                show={true}
                alert={alertRight}
                comment={emails[this.state.actualID].comment_right}
                callBack={this.handleSwitchToNextEmail}
              />
            </>
          )}
        {this.state.idOption === "Phishing" &&
          emails[this.state.actualID].positive === false &&
          this.state.actualID !== 9 && (
            <>
              <GameAlert
                show={true}
                alert={alertWrong}
                comment={emails[this.state.actualID].comment_wrong}
                callBack={this.handleSwitchToNextEmail}
              />
            </>
          )}

        {this.state.idOption === "Regular" &&
          emails[this.state.actualID].positive === false &&
          this.state.actualID === 9 && (
            <>
              <GameAlert
                show={true}
                alert={alertRight}
                comment={emails[this.state.actualID].comment_right}
                callBack={this.handleSwitchToThirdLevel}
              />
            </>
          )}
        {this.state.idOption === "Regular" &&
          emails[this.state.actualID].positive &&
          this.state.actualID === 9 && (
            <>
              <GameAlert
                show={true}
                alert={alertWrong}
                comment={emails[this.state.actualID].comment_wrong}
                callBack={this.handleSwitchToThirdLevel}
              />
            </>
          )}
        {this.state.idOption === "Phishing" &&
          emails[this.state.actualID].positive &&
          this.state.actualID === 9 && (
            <>
              <GameAlert
                show={true}
                alert={alertRight}
                comment={emails[this.state.actualID].comment_right}
                callBack={this.handleSwitchToThirdLevel}
              />
            </>
          )}
        {this.state.idOption === "Phishing" &&
          emails[this.state.actualID].positive === false &&
          this.state.actualID === 9 && (
            <>
              <GameAlert
                show={true}
                alert={alertWrong}
                comment={emails[this.state.actualID].comment_wrong}
                callBack={this.handleSwitchToThirdLevel}
              />
            </>
          )}
      </div>
    );
  }
}

export default SecondLevelEmail;
