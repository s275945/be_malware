import React, { useState } from "react";
import GameAlert from "../../components/GameAlert";
import GameWriter from "../../components/GameWriter";
import UAC_SOFT from "../../img/uac_soft.jpeg";
import AnswersButtons from "../../components/AnswersButtons";
import { Row, Col } from "react-bootstrap";

export default function FourthLevelUacSoft(props) {
  const handleSwitchToReport = () => {
    props.updateInfo();
    props.handleLevel("report");
  };

  const handleAlert1 = () => {
    setIsAlert1(true);
    props.right();
    props.updateScore(4);
  };

  const handleAlert2 = () => {
    props.wrong();
    setIsAlert2(true);
  };

  const [isAlert1, setIsAlert1] = useState(false);
  const [isAlert2, setIsAlert2] = useState(false);

  const alertWrong = {
    head: "Wrong Answer!",
    text: "Giving access to your data to software from unknown sources can be dangerous. If the software is malicious, the attacker could access our data using it for his purposes.",
  };

  const alertRight = {
    head: "Right Answer!",
    text: "Good choice! Even if downloading software from unknown sources is a wrong move, you can buffer the error by not giving access to your sensitive data, in order to keep the attacker away from our private data!",
  };

  return (
    <div>
      <div className="mb-3">
        <GameWriter
          text={
            "The newly downloaded software requires access to your data in order to be used. Click the 'Allow' button if you want to give it access to your data, and click the 'Don't' button if you don't want the software to access your data."
          }
        />
      </div>

      <div>
        <img src={UAC_SOFT} alt="img" width={1000} height={480} />
      </div>
      <Row style={{ marginTop: "-110px", marginRight: "180px" }}>
        <Col></Col>
        <Col>
          <AnswersButtons
            labelButton1={"Don't"}
            labelButton2={"Allow"}
            callBackButton1={handleAlert1}
            callBackButton2={handleAlert2}
          />
          {isAlert1 && (
            <GameAlert
              show={isAlert1}
              alert={alertRight}
              callBack={handleSwitchToReport}
            />
          )}
          {isAlert2 && (
            <GameAlert
              show={isAlert2}
              alert={alertWrong}
              callBack={handleSwitchToReport}
            />
          )}
        </Col>
        <Col className="col-2"></Col>
      </Row>
    </div>
  );
}
