import React from "react";
import { Container } from "react-bootstrap";
import FirstLevelIntro from "../scenarios/first_level/FirstLevelIntro";
import FirstLevelChoice from "../scenarios/first_level/FirstLevelChoice";
import FirstLevelDnd from "../scenarios/first_level/FirstLevelDnd";
import FirstLevelLeave from "../scenarios/first_level/FirstLevelLeave";
import FirstLevelHacked from "../scenarios/first_level/FirstLevelHacked";
import FirstLevelDesk from "../scenarios/first_level/FirstLevelDesk";
import FirstLevelHelpDesk from "../scenarios/first_level/FirstLevelHelpDesk";

class FirstLevel extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      actualScenario: "intro",
    };
  }

  handleScenario = (scenario) => {
    this.setState({ actualScenario: scenario });
  };

  switchToSecond = () => {
    this.props.handleLevel("second");
    this.props.updateContainer();
  };

  renderScenario() {
    switch (this.state.actualScenario) {
      case "intro":
        return <FirstLevelIntro handleScenario={this.handleScenario} />;
      case "choice":
        return (
          <FirstLevelChoice
            handleScenario={this.handleScenario}
            updateScore={this.props.updateScore}
            right={this.props.right}
            wrong={this.props.wrong}
          />
        );
      case "leave":
        return (
          <FirstLevelLeave
            handleScenario={this.handleScenario}
            updateScore={this.props.updateScore}
            right={this.props.right}
            wrong={this.props.wrong}
          />
        );
      case "dnd":
        return (
          <FirstLevelDnd
            handleScenario={this.handleScenario}
            updateScore={this.props.updateScore}
            right={this.props.right}
            wrong={this.props.wrong}
          />
        );
      case "hacked":
        return (
          <FirstLevelHacked
            handleScenario={this.handleScenario}
            handleLevel={this.switchToSecond}
          />
        );
      case "desk":
        return (
          <FirstLevelDesk
            handleScenario={this.handleScenario}
            handleLevel={this.switchToSecond}
          />
        );
      case "h_desk":
        return (
          <FirstLevelHelpDesk
            handleScenario={this.handleScenario}
            handleLevel={this.switchToSecond}
          />
        );
      default:
        return null;
    }
  }

  render() {
    return <Container>{this.renderScenario()}</Container>;
  }
}

export default FirstLevel;
